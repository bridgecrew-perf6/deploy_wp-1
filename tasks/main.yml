---
- name: "stopped old containers"
  docker_container:
    name: "{{ item }}"
    state: stopped
  loop:
    - "{{ mysql_app_name }}" 
    - "{{ wp_app_name }}"
  ignore_errors: yes 

- name: "remove old containers"
  docker_container:
    name: "{{ item  }}"
    state: absent 
  loop: 
    - "{{ mysql_app_name }}"
    - "{{ wp_app_name }}" 
  ignore_errors: yes

- name: "clean directory"
  file:
    path: "{{ item }}" 
    state: absent
  loop:
    - "{{ save_db }}"
    - "{{ save_wp }}"
  ignore_errors: yes 

- name: "create network"
  docker_network: 
    name: "{{ network_name }}"

- name: "install mysql"
  docker_container:
    name: "{{ mysql_app_name }}"
    image: "{{ mysql_version }}"
    state: started
    restart: yes
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_root_password }}"
      MYSQL_DATABASE: "{{ mysql_db }}"
      MYSQL_USER: "{{ mysql_user }}"
      MYSQL_PASSWORD: "{{ mysql_password }}"
    ports:
      - "{{ mysql_port }}:3306"
    volumes:
      - "{{ save_db  }}:/var/lib/mysql" 
    networks: 
      - name: "{{ network_name }}"

- name: "install wordpress"
  docker_container:
    name: "{{ wp_app_name }}"
    image: "{{ wordpress_version }}"
    state: started 
    restart: yes
    env:
      WORDPRESS_DB_HOST: "{{ mysql_app_name }}"
      WORDPRESS_DB_NAME: "{{ mysql_db }}"
      WORDPRESS_DB_USER: "{{ mysql_user }}"
      WORDPRESS_DB_PASSWORD: "{{ mysql_password }}"
      WORDPRESS_DEBUG: "1"
    ports:
      - "{{ wp_port }}:80"
    # ce n'est pas demander le volume qui suit, mais bon ne faisant pas les choses à moitié
    volumes:
      - "{{ save_wp }}:/var/www/html" 
    networks: 
      - name: "{{ network_name }}"
